<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	          http://www.springframework.org/schema/beans/spring-beans.xsd
	          http://www.springframework.org/schema/context
	          http://www.springframework.org/schema/context/spring-context-4.0.xsd
	          http://www.springframework.org/schema/aop
	          http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	          http://www.springframework.org/schema/tx
	          http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 1.配置数据库相关的参数 -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />

	<!--2. 数据库连接池 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30"></property>
		<property name="minPoolSize" value="10"></property>
		<!-- 调用close的时候不要commit 默认：false -->
		<property name="autoCommitOnClose" value="false"></property>
		<!-- 等待连接的超时时间 -->
		<property name="checkoutTimeout" value="1000"></property>
		<!-- 连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"></property>
	</bean>

	<!--3. 配置sqlSessionFactory对象 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置Mybatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<!-- 扫描entity包，使用别名 -->
		<property name="typeAliasesPackage"
			value="org.seckill.entity"></property>
		<!-- 扫描sql配置文件：mapper的配置文件 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 4.配置扫描接口包，动态实现dao接口，并注入spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory 使用BeanName防止提前初始化sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="org.seckill.dao"></property>
	</bean>

	<!-- 注入redis DAO -->
	<bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
		<constructor-arg index="0" value="192.168.43.83"></constructor-arg>
		<constructor-arg index="1" value="6379"></constructor-arg>
	</bean>
</beans>
                        